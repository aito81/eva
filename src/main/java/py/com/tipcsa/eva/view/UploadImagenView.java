package py.com.tipcsa.eva.view;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.MouseEvents;
import com.vaadin.event.MouseEvents.ClickEvent;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.server.FileResource;
import com.vaadin.server.Page;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.JavaScript;
import com.vaadin.ui.Notification;
import com.vaadin.ui.UI;
import com.vaadin.ui.Upload;
import com.vaadin.ui.Upload.Receiver;
import com.vaadin.ui.Upload.SucceededEvent;
import com.vaadin.ui.Upload.SucceededListener;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;




public class UploadImagenView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout formLayout;
	@AutoGenerated
	private VerticalLayout vistaPreviaLayout;
	@AutoGenerated
	private VerticalLayout imgVistaPreviaLayout;
	@AutoGenerated
	private Embedded imgVistaPrevia;
	@AutoGenerated
	private Upload upLoadArchivo;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private String nombreArchivo;
	private FileResource adjuntoFile;
	private ImgFullScreenView imgFullScreenView = new ImgFullScreenView();
	private String styleNameFullScreen;
	private String styleNameFullScreenImg;
	private String heigthImgVistaPreviaLayout;
	private String widthImgVistaPreviaLayout;
	
	
	public FileResource getAdjuntoFile() {
		return adjuntoFile;
	}


	public void setAdjuntoFile(FileResource adjuntoFile) {
		this.adjuntoFile = adjuntoFile;
	}


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	
	public UploadImagenView(String pathArchivo, String descripcionArchivo) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		vistaPreviaLayout.setEnabled(true);
		imgVistaPreviaLayout.setEnabled(true);
		imgVistaPrevia.setEnabled(true);
		
		JavaScript.getCurrent().execute("document.getElementsByClassName('gwt-FileUpload')[0].setAttribute('accept', 'image/*')");
		subirArchivo(pathArchivo, descripcionArchivo);
		//
		imgVistaPrevia.addClickListener(new MouseEvents.ClickListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void click(ClickEvent event) {
				imgVistaPreviaOnClick();
				
			}
		});
	}
	

	public UploadImagenView() {
		super();
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		vistaPreviaLayout.setEnabled(true);
		imgVistaPreviaLayout.setEnabled(true);
		imgVistaPrevia.setEnabled(true);
		
		JavaScript.getCurrent().execute("document.getElementsByClassName('gwt-FileUpload')[0].setAttribute('accept', 'image/*')");
		imgVistaPrevia.addClickListener(new MouseEvents.ClickListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void click(ClickEvent event) {
				imgVistaPreviaOnClick();
				
			}
		});
	}


	private void imgVistaPreviaOnClick() {
		imgFullScreenView.getMainLayout().addStyleName(styleNameFullScreen);
		imgFullScreenView.getImg().addStyleName(styleNameFullScreenImg);
		Window windowImgFullScreenView = new Window(null, imgFullScreenView);
		imgFullScreenView.getImg().setSource(imgVistaPrevia.getSource());
		imgFullScreenView.setWindow(windowImgFullScreenView);
		windowImgFullScreenView.setModal(true);
		windowImgFullScreenView.setCloseShortcut(KeyCode.ESCAPE, null);
		windowImgFullScreenView.setHeight("100%");
		windowImgFullScreenView.setWidth("100%");
		windowImgFullScreenView.setStyleName("v-window-foo");
		windowImgFullScreenView.setResizable(false);
    	
    	UI.getCurrent().addWindow(windowImgFullScreenView);
    	windowImgFullScreenView.focus();
		
    	/*if (imgVistaPrevia.getStyleName().equals("foto_full_screen")) {
			imgFullScreen.setVisible(true);
			imgFullScreen.setStyleName("");
		} else {
			imgFullScreen.setVisible(false);
			imgFullScreen.setStyleName("foto_full_screen");
		}*/
	}


	public UploadImagenView(Component compositionRoot) {
		super(compositionRoot);
		// TODO Auto-generated constructor stub
		
		JavaScript.getCurrent().execute("document.getElementsByClassName('gwt-FileUpload')[0].setAttribute('accept', 'image/*')");
		imgVistaPrevia.addClickListener(new MouseEvents.ClickListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void click(ClickEvent event) {
				imgVistaPreviaOnClick();
				
			}
		});
	}


	private void subirArchivo(String pathArchivo, String descripcionArchivo) {
			
			class ImageUploader implements Receiver, SucceededListener {
		
			/**
		 	* 
		 	*/
			private static final long serialVersionUID = 1L;
			public File file;
		
		
			@Override
			public OutputStream receiveUpload(String filename, String mimeType) {
				FileOutputStream fos = null;
				try {
					file = new File(pathArchivo +"/"+filename.toLowerCase());
					fos = new FileOutputStream(file);	
				} catch (final java.io.FileNotFoundException e) {
					
					new Notification("No se puede abrir el archivo <br/>",
						e.getMessage(), Notification.Type.ERROR_MESSAGE).show(Page.getCurrent());
					return null;
				}
				setNombreArchivo(filename.toLowerCase());
				return fos;
			}

			@Override
			public void uploadSucceeded(SucceededEvent event) {
				try {
					adjuntoFile = new FileResource(file);
				} catch (Exception e) {
					
					Notification.show("Error al subir el archivo", Notification.Type.ERROR_MESSAGE);
					return;
				}
				imgVistaPrevia.setSource(adjuntoFile);
				imgVistaPrevia.setVisible(true);
			}
		
		};
		ImageUploader receiver = new ImageUploader();
	
		
		upLoadArchivo.setButtonCaption( " Subir "+descripcionArchivo);
		upLoadArchivo.setReceiver(receiver);
		upLoadArchivo.addSucceededListener(receiver);
		
		
	}
	
	
	public VerticalLayout getImgVistaPreviaLayout() {
		return imgVistaPreviaLayout;
	}


	public void setImgVistaPreviaLayout(VerticalLayout imgVistaPreviaLayout) {
		this.imgVistaPreviaLayout = imgVistaPreviaLayout;
	}


	public Embedded getImgVistaPrevia() {
		return imgVistaPrevia;
	}


	public void setImgVistaPrevia(Embedded imgVistaPrevia) {
		this.imgVistaPrevia = imgVistaPrevia;
	}


	public Upload getUpLoadArchivo() {
		return upLoadArchivo;
	}


	public void setUpLoadArchivo(Upload upLoadArchivo) {
		this.upLoadArchivo = upLoadArchivo;
	}



	
	public String getNombreArchivo() {
		return nombreArchivo;
	}


	public void setNombreArchivo(String nombreArchivo) {
		this.nombreArchivo = nombreArchivo;
	}
	
	

	public String getStyleNameFullScreen() {
		return styleNameFullScreen;
	}


	public void setStyleNameFullScreen(String styleNameFullScreen) {
		this.styleNameFullScreen = styleNameFullScreen;
	}


	public String getStyleNameFullScreenImg() {
		return styleNameFullScreenImg;
	}


	public void setStyleNameFullScreenImg(String styleNameFullScreenImg) {
		this.styleNameFullScreenImg = styleNameFullScreenImg;
	}




	public String getHeigthImgVistaPreviaLayout() {
		return heigthImgVistaPreviaLayout;
	}


	public void setHeigthImgVistaPreviaLayout(String heigthImgVistaPreviaLayout) {
		this.heigthImgVistaPreviaLayout = heigthImgVistaPreviaLayout;
	}


	public String getWidthImgVistaPreviaLayout() {
		return widthImgVistaPreviaLayout;
	}


	public void setWidthImgVistaPreviaLayout(String widthImgVistaPreviaLayout) {
		this.widthImgVistaPreviaLayout = widthImgVistaPreviaLayout;
	}


	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// formLayout
		formLayout = buildFormLayout();
		mainLayout.addComponent(formLayout);
		
		return mainLayout;
	}


	@AutoGenerated
	private VerticalLayout buildFormLayout() {
		// common part: create layout
		formLayout = new VerticalLayout();
		
		formLayout.setWidth("100.0%");
		formLayout.setHeight("-1px");
		formLayout.setMargin(true);
		formLayout.setSpacing(true);
		
		// upLoadArchivo
		upLoadArchivo = new Upload();
		
		upLoadArchivo.setWidth("100.0%");
		upLoadArchivo.setHeight("-1px");
		formLayout.addComponent(upLoadArchivo);
		
		// vistaPreviaLayout
		vistaPreviaLayout = buildVistaPreviaLayout();
		formLayout.addComponent(vistaPreviaLayout);
		formLayout.setComponentAlignment(vistaPreviaLayout, new Alignment(20));
		
		return formLayout;
	}


	@AutoGenerated
	private VerticalLayout buildVistaPreviaLayout() {
		// common part: create layout
		vistaPreviaLayout = new VerticalLayout();
		vistaPreviaLayout.setEnabled(false);
		
		vistaPreviaLayout.setWidth("80.0%");
		vistaPreviaLayout.setHeight("-1px");
		vistaPreviaLayout.setMargin(false);
		
		// imgVistaPreviaLayout
		imgVistaPreviaLayout = buildImgVistaPreviaLayout();
		vistaPreviaLayout.addComponent(imgVistaPreviaLayout);
		vistaPreviaLayout.setComponentAlignment(imgVistaPreviaLayout, new Alignment(20));
		
		return vistaPreviaLayout;
	}


	@AutoGenerated
	private VerticalLayout buildImgVistaPreviaLayout() {
		// common part: create layout
		imgVistaPreviaLayout = new VerticalLayout();
		imgVistaPreviaLayout.setEnabled(false);
		
		imgVistaPreviaLayout.setWidth("500px");
		imgVistaPreviaLayout.setHeight("300px");
		imgVistaPreviaLayout.setMargin(false);
		
		// imgVistaPrevia
		imgVistaPrevia = new Embedded();
		imgVistaPrevia.setEnabled(false);
		
		imgVistaPrevia.setVisible(false);
		imgVistaPrevia.setWidth("100.0%");
		imgVistaPrevia.setHeight("100.0%");
		imgVistaPrevia.setSource(new ThemeResource("img/component/embedded_icon.png"));
		imgVistaPrevia.setType(1);
		imgVistaPrevia.setMimeType("image/png");
		imgVistaPreviaLayout.addComponent(imgVistaPrevia);
		
		return imgVistaPreviaLayout;
	}

	
	

}
